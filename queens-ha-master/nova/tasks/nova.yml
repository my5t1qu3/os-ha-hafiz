---
- name: create nova database
  mysql_db: login_user=root login_password={{ root_dbpw }} name=nova state=present
  when: inventory_hostname == 'controller1'

- name: create nova_api database
  mysql_db: login_user=root login_password={{ root_dbpw }} name=nova_api state=present
  when: inventory_hostname == 'controller1'

- name: create nova_cell0 database
  mysql_db: login_user=root login_password={{ root_dbpw }} name=nova_cell0 state=present
  when: inventory_hostname == 'controller1'

- name: grant nova database local host access
  mysql_user: login_user=root login_password={{ root_dbpw }} name=nova password={{ nova_dbpw }} priv='nova.*:ALL'
  when: inventory_hostname == 'controller1'

- name: grant nova database controller1 host access
  mysql_user: login_user=root login_password={{ root_dbpw }} name=nova password={{ nova_dbpw }} priv='nova.*:ALL' host=controller1
  when: inventory_hostname == 'controller1'

- name: grant nova database controller2 host access
  mysql_user: login_user=root login_password={{ root_dbpw }} name=nova password={{ nova_dbpw }} priv='nova.*:ALL' host=controller2
  when: inventory_hostname == 'controller1'

- name: grant nova database controller3 host access
  mysql_user: login_user=root login_password={{ root_dbpw }} name=nova password={{ nova_dbpw }} priv='nova.*:ALL' host=controller3
  when: inventory_hostname == 'controller1'

- name: grant nova database any host access
  mysql_user: login_user=root login_password={{ root_dbpw }} name=nova password={{ nova_dbpw }} priv='nova.*:ALL' host=%
  when: inventory_hostname == 'controller1'

- name: grant nova_api database local host access
  mysql_user: login_user=root login_password={{ root_dbpw }} name=nova password={{ nova_dbpw }} priv='nova_api.*:ALL'
  when: inventory_hostname == 'controller1'

- name: grant nova_api database controller1 host access
  mysql_user: login_user=root login_password={{ root_dbpw }} name=nova password={{ nova_dbpw }} priv='nova_api.*:ALL' host=controller1
  when: inventory_hostname == 'controller1'

- name: grant nova_api database controller2 host access
  mysql_user: login_user=root login_password={{ root_dbpw }} name=nova password={{ nova_dbpw }} priv='nova_api.*:ALL' host=controller2
  when: inventory_hostname == 'controller1'

- name: grant nova_api database controller3 host access
  mysql_user: login_user=root login_password={{ root_dbpw }} name=nova password={{ nova_dbpw }} priv='nova_api.*:ALL' host=controller3
  when: inventory_hostname == 'controller1'

- name: grant nova_api database any host access
  mysql_user: login_user=root login_password={{ root_dbpw }} name=nova password={{ nova_dbpw }} priv='nova_api.*:ALL' host=%
  when: inventory_hostname == 'controller1'

- name: grant nova_cell0 database local host access
  mysql_user: login_user=root login_password={{ root_dbpw }} name=nova password={{ nova_dbpw }} priv='nova_cell0.*:ALL'
  when: inventory_hostname == 'controller1'

- name: grant nova_cell0 database controller1 host access
  mysql_user: login_user=root login_password={{ root_dbpw }} name=nova password={{ nova_dbpw }} priv='nova_cell0.*:ALL' host=controller1
  when: inventory_hostname == 'controller1'

- name: grant nova_cell0 database controller2 host access
  mysql_user: login_user=root login_password={{ root_dbpw }} name=nova password={{ nova_dbpw }} priv='nova_cell0.*:ALL' host=controller2
  when: inventory_hostname == 'controller1'

- name: grant nova_cell0 database controller3 host access
  mysql_user: login_user=root login_password={{ root_dbpw }} name=nova password={{ nova_dbpw }} priv='nova_cell0.*:ALL' host=controller3
  when: inventory_hostname == 'controller1'

- name: grant nova_cell0 database any host access
  mysql_user: login_user=root login_password={{ root_dbpw }} name=nova password={{ nova_dbpw }} priv='nova_cell0.*:ALL' host=%
  when: inventory_hostname == 'controller1'

- name: grant nova database all host access with sheell module
  shell: mysql -u root -p{{ root_dbpw }} -e "GRANT ALL PRIVILEGES ON nova.* TO 'nova'@'localhost' IDENTIFIED BY '{{ nova_dbpw }}'; GRANT ALL PRIVILEGES ON nova.* TO 'nova'@'controller1' IDENTIFIED BY '{{ nova_dbpw }}'; GRANT ALL PRIVILEGES ON nova.* TO 'nova'@'controller2' IDENTIFIED BY '{{ nova_dbpw }}';  GRANT ALL PRIVILEGES ON nova.* TO 'nova'@'controller3' IDENTIFIED BY '{{ nova_dbpw }}'; GRANT ALL PRIVILEGES ON nova.* TO 'nova'@'%' IDENTIFIED BY '{{ nova_dbpw }}';"
  when: inventory_hostname == 'controller1'

- name: grant nova_api database all host access with sheell module
  shell: mysql -u root -p{{ root_dbpw }} -e "GRANT ALL PRIVILEGES ON nova_api.* TO 'nova'@'localhost' IDENTIFIED BY '{{ nova_dbpw }}'; GRANT ALL PRIVILEGES ON nova_api.* TO 'nova'@'controller1' IDENTIFIED BY '{{ nova_dbpw }}'; GRANT ALL PRIVILEGES ON nova_api.* TO 'nova'@'controller2' IDENTIFIED BY '{{ nova_dbpw }}';  GRANT ALL PRIVILEGES ON nova_api.* TO 'nova'@'controller3' IDENTIFIED BY '{{ nova_dbpw }}'; GRANT ALL PRIVILEGES ON nova_api.* TO 'nova'@'%' IDENTIFIED BY '{{ nova_dbpw }}';"
  when: inventory_hostname == 'controller1'

- name: grant nova_cell0 database all host access with sheell module
  shell: mysql -u root -p{{ root_dbpw }} -e "GRANT ALL PRIVILEGES ON nova_cell0.* TO 'nova'@'localhost' IDENTIFIED BY '{{ nova_dbpw }}'; GRANT ALL PRIVILEGES ON nova_cell0.* TO 'nova'@'controller1' IDENTIFIED BY '{{ nova_dbpw }}'; GRANT ALL PRIVILEGES ON nova_cell0.* TO 'nova'@'controller2' IDENTIFIED BY '{{ nova_dbpw }}';  GRANT ALL PRIVILEGES ON nova_cell0.* TO 'nova'@'controller3' IDENTIFIED BY '{{ nova_dbpw }}'; GRANT ALL PRIVILEGES ON nova_cell0.* TO 'nova'@'%' IDENTIFIED BY '{{ nova_dbpw }}';"
  when: inventory_hostname == 'controller1'
  
- name: create nova user
  os_user: cloud=openstack state=present name=nova password={{ nova_pw }} update_password=on_create domain=default default_project=admin
  when: inventory_hostname == 'controller1'

- name: grant admin role on the nova user
  os_user_role: cloud=openstack user=nova role=admin project=service
  when: inventory_hostname == 'controller1'

- name: create nova service
  os_keystone_service: cloud=openstack state=present name=nova service_type=compute description="OpenStack Compute Service"
  when: inventory_hostname == 'controller1'

- name: create nova public endpoint
  os_keystone_endpoint: cloud=openstack service=nova endpoint_interface=public url=http://{{ vip }}:8774/v2.1 region=RegionOne state=present
  when: inventory_hostname == 'controller1'

- name: create nova internal endpoint
  os_keystone_endpoint: cloud=openstack service=nova endpoint_interface=internal url=http://{{ vip }}:8774/v2.1 region=RegionOne state=present
  when: inventory_hostname == 'controller1'

- name: create nova admin endpoint
  os_keystone_endpoint: cloud=openstack service=nova endpoint_interface=admin url=http://{{ vip }}:8774/v2.1 region=RegionOne state=present
  when: inventory_hostname == 'controller1'

- name: create placement user
  os_user: cloud=openstack state=present name=placement password={{ placement_pw }} update_password=on_create domain=default default_project=admin
  when: inventory_hostname == 'controller1'

- name: grant admin role on the placement user
  os_user_role: cloud=openstack user=placement role=admin project=service
  when: inventory_hostname == 'controller1'

- name: create placement service
  os_keystone_service: cloud=openstack state=present name=placement service_type=placement description="Placement API"
  when: inventory_hostname == 'controller1'

- name: create placement public endpoint
  os_keystone_endpoint: cloud=openstack service=placement endpoint_interface=public url=http://{{ vip }}:8778 region=RegionOne state=present
  when: inventory_hostname == 'controller1'

- name: create placement internal endpoint
  os_keystone_endpoint: cloud=openstack service=placement endpoint_interface=internal url=http://{{ vip }}:8778 region=RegionOne state=present
  when: inventory_hostname == 'controller1'

- name: create placement admin endpoint
  os_keystone_endpoint: cloud=openstack service=placement endpoint_interface=admin url=http://{{ vip }}:8778 region=RegionOne state=present
  when: inventory_hostname == 'controller1'
  
- name: install nova packages
  yum: name="{{ packages }}" state=latest
  vars:
    packages:
    - openstack-nova-api
    - openstack-nova-conductor
    - openstack-nova-console
    - openstack-nova-novncproxy
    - openstack-nova-scheduler
    - openstack-nova-placement-api

- name: create nova configuration file
  template: src=nova.conf.j2 dest=/etc/nova/nova.conf
  notify: restart nova services

- name: create placement configuration file
  template: src=00-nova-placement-api.conf.j2 dest=/etc/httpd/conf.d/00-nova-placement-api.conf
  notify: restart httpd service

- name: populate api_db sync
  shell: nova-manage api_db sync
  become: yes
  become_user: nova
  when: inventory_hostname == 'controller1'

- name: populate cell_v2 map_cell0
  shell: nova-manage cell_v2 map_cell0
  become: yes
  become_user: nova
  when: inventory_hostname == 'controller1'

- name: populate cell_v2 create_cell
  shell: nova-manage cell_v2 create_cell --name=cell1 --verbose
  become: yes
  become_user: nova
  when: inventory_hostname == 'controller1'

- name: populate db sync
  shell: nova-manage db sync
  become: yes
  become_user: nova
  when: inventory_hostname == 'controller1'

- name: start nova services
  service: name=openstack-nova-api state=started enabled=yes

- name: start nova services
  service: name=openstack-nova-consoleauth state=started enabled=yes

- name: start nova services
  service: name=openstack-nova-scheduler state=started enabled=yes

- name: start nova services
  service: name=openstack-nova-conductor state=started enabled=yes

- name: start nova services
  service: name=openstack-nova-novncproxy state=started enabled=yes

